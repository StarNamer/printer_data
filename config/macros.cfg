# This file provides examples of Klipper G-Code macros.  The snippets
# in this file may be copied into the main printer.cfg file and
# customized.

# See docs/Config_Reference.md for a description of parameters.


######################################################################
# Start Print and End Print
######################################################################

# Replace the slicer's custom start and end g-code scripts with
# START_PRINT and END_PRINT. See docs/Slicers.md for more information on using these macros.

[gcode_macro START_PRINT]
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}

    # set extruder temp
    M104 S{EXTRUDER_TEMP}
    # Start bed heating
    M140 S{BED_TEMP}
    # Use absolute coordinates
    G90
    # Reset the G-Code Z offset (adjust Z offset if needed)
    SET_GCODE_OFFSET Z=0.0
    # Reset extruder
    G92 E0
    # Home the printer
    G28
    # Move the nozzle near the bed
    G1 Z5 F3000
    # Move the nozzle very close to the bed
    G1 Z0.15 F300
    G1 X1 Y20 Z0.3 F5000.0 # Move to start position
    # Wait for bed to reach temperature
    M190 S{BED_TEMP}
    # Set and wait for nozzle to reach temperature
    M109 S{EXTRUDER_TEMP}
    G1 X1 Y200.0 Z0.3 F1500.0 E15
    G1 X1.3 Y200.0 Z0.3 F5000.0
    G1 X1.3 Y20 Z0.3 F1500.0 E30
    G1 E28
    G1 E30
    G92 E0

[gcode_macro END_PRINT]
gcode:
    {% set Y_MAX = params.Y_MAX|default(235)|float %}
    # Turn off bed, extruder, and fan
    M140 S0
    M104 S0
    M106 S0
    # Move nozzle away from print while retracting
    G91
    G1 X-2 Y-2 E-3 F300
    # Raise nozzle by 10mm
    G1 Z10 F3000
    G90
    G1 X0 Y{Y_MAX}
    # Disable steppers
    M84


######################################################################
# Beeper
######################################################################

# M300 : Play tone. Beeper support, as commonly found on usual LCD
# displays (i.e. RepRapDiscount 2004 Smart Controller, RepRapDiscount
# 12864 Full Graphic). This defines a custom I/O pin and a custom
# GCODE macro.  Usage:
#   M300 [P<ms>] [S<Hz>]
#   P is the tone duration, S the tone frequency.
# The frequency won't be pitch perfect.

[output_pin BEEPER_pin]
pin: EXP1_1
#   Beeper pin. This parameter must be provided.
#   ar37 is the default RAMPS/MKS pin.
pwm: True
#   A piezo beeper needs a PWM signal, a DC buzzer doesn't.
value: 0
#   Silent at power on, set to 1 if active low.
shutdown_value: 0
#   Disable at emergency shutdown (no PWM would be available anyway).
cycle_time: 0.001
#   Default PWM frequency : 0.001 = 1ms will give a tone of 1kHz
#   Although not pitch perfect.

[gcode_macro M300]
gcode:
    # Use a default 1kHz tone if S is omitted.
    {% set S = params.S|default(1000)|int %}
    # Use a 10ms duration is P is omitted.
    {% set P = params.P|default(100)|int %}
    SET_PIN PIN=BEEPER_pin VALUE=0.5 CYCLE_TIME={ 1.0/S if S > 0 else 1 }
    G4 P{P}
    SET_PIN PIN=BEEPER_pin VALUE=0


######################################################################
# Filament Change
######################################################################

# M600: Filament Change. This macro will pause the printer, move the
# tool to the change position, and retract the filament 50mm. Adjust
# the retraction settings for your own extruder. After filament has
# been changed, the print can be resumed from its previous position
# with the "RESUME" gcode.

[pause_resume]

[gcode_macro M600]
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-50 F1000
    RESTORE_GCODE_STATE NAME=M600_state

# ######################################################################
# # Override M117 command with rawparams
# ######################################################################
[respond]
# # The macro below will override the default M117 command to echo the message.
# #
# # It uses the rawparams pseudo-variable that contains the full unparsed
# # parameters that was passed to the M117 command.
# #
# # As this can include comments, we are trimming the text when a `;` or `#` is
# # found, and escaping any existing `"`

# [gcode_macro M117]
# rename_existing: M117.1
# gcode:
#   {% if rawparams %}
#     {% set escaped_msg = rawparams.split(';', 1)[0].split('\x23', 1)[0]|replace('"', '\\"') %}
#     SET_DISPLAY_TEXT MSG="{escaped_msg}"
#     RESPOND TYPE=command MSG="{escaped_msg}"
#   {% else %}
#     SET_DISPLAY_TEXT
#   {% endif %}

# SDCard 'looping' (aka Marlin M808 commands) support
#
# Support SDCard looping
[sdcard_loop]

# 'Marlin' style M808 compatibility macro for SDCard looping
[gcode_macro M808]
gcode:
    {% if params.K is not defined and params.L is defined %}SDCARD_LOOP_BEGIN COUNT={params.L|int}{% endif %}
    {% if params.K is not defined and params.L is not defined %}SDCARD_LOOP_END{% endif %}
    {% if params.K is defined and params.L is not defined %}SDCARD_LOOP_DESIST{% endif %}

# Cancel object (aka Marlin/RRF M486 commands) support
#
# Enable object exclusion
[exclude_object]

[gcode_macro M486]
gcode:
  # Parameters known to M486 are as follows:
  #   [C<flag>] Cancel the current object
  #   [P<index>] Cancel the object with the given index
  #   [S<index>] Set the index of the current object.
  #       If the object with the given index has been canceled, this will cause
  #       the firmware to skip to the next object. The value -1 is used to
  #       indicate something that isn’t an object and shouldn’t be skipped.
  #   [T<count>] Reset the state and set the number of objects
  #   [U<index>] Un-cancel the object with the given index. This command will be
  #       ignored if the object has already been skipped

  {% if 'exclude_object' not in printer %}
    {action_raise_error("[exclude_object] is not enabled")}
  {% endif %}

  {% if 'T' in params %}
    EXCLUDE_OBJECT RESET=1

    {% for i in range(params.T | int) %}
      EXCLUDE_OBJECT_DEFINE NAME={i}
    {% endfor %}
  {% endif %}

  {% if 'C' in params %}
    EXCLUDE_OBJECT CURRENT=1
  {% endif %}

  {% if 'P' in params %}
    EXCLUDE_OBJECT NAME={params.P}
  {% endif %}

  {% if 'S' in params %}
    {% if params.S == '-1' %}
      {% if printer.exclude_object.current_object %}
        EXCLUDE_OBJECT_END NAME={printer.exclude_object.current_object}
      {% endif %}
    {% else %}
      EXCLUDE_OBJECT_START NAME={params.S}
    {% endif %}
  {% endif %}

  {% if 'U' in params %}
    EXCLUDE_OBJECT RESET=1 NAME={params.U}
  {% endif %}

[gcode_macro M900]
gcode:
  {% if 'K' in params %}
    {% if 'E' in params %}
      SET_PRESSURE_ADVANCE EXTRUDER={params.E} ADVANCE={params.K}
    {% else %}
      SET_PRESSURE_ADVANCE ADVANCE={params.K}
    {% endif %}
  {% endif %}


[gcode_macro G27]
gcode:
  {% set default_x = printer.toolhead.axis_minimum.x + 20 %}
  {% set default_y = printer.toolhead.axis_minimum.y + 20 %}

  {% if 'save_variables' in printer %}
    {% set svv = printer.save_variables.variables %}
    {% if 'park_x' in svv %}
      {% set default_x = svv.park_x %}
    {% endif %}
    {% if 'park_y' in svv %}
      {% set default_y = svv.park_y %}
    {% endif %}
  {% endif %}

  {% set x = params.X|default(default_x)|float %}
  {% set y = params.Y|default(default_y)|float %}
  {% set z = params.Z|default(20)|float %}

  {% if printer.toolhead.homed_axes != "xyz" %}
    {action_respond_info("Please home XYZ first")}
  {% else %}
    SAVE_GCODE_STATE NAME=G27_state
    G91
    G1 Z{z}
    G90
    G1 X{x} Y{y} F3000
    RESTORE_GCODE_STATE NAME=G27_state MOVE=0
  {% endif %}

[gcode_macro G29]
gcode:
  {% set t = params.T|default(0)|float %}

  {% if printer.idle_timeout.state == "Printing" %}
    {action_respond_info("This command cannot be used while printing")}
  {% elif printer.toolhead.homed_axes != "xyz" %}
    {action_respond_info("Please home XYZ first")}
  {% else %}
    SAVE_GCODE_STATE NAME=G29_state
    G90
    G1 Z10 F240
    {% if t > 30.0 %}
      M190 S{t}
    {% endif %}
    BED_MESH_CALIBRATE
    {% if 'S' in params %}
      M140 S{params.S}
    {% endif %}
    G90
    G1 Z10 F240
    G1 X150 Y155 F6000
    RESTORE_GCODE_STATE NAME=G29_state MOVE=0
  {% endif %}

[gcode_macro M204]
rename_existing: M204.1
gcode:
  {% set f = params.F|default(0.5)|float %}

  {% if 'S' in params %}
    {% set s = params.S|float %}
    SET_VELOCITY_LIMIT ACCEL={s} ACCEL_TO_DECEL={ s * f }
  {% else %}
    {% if 'P' in params %}
      {% set p = params.P|float %}
      {% if 'T' in params %}
        {% set t = params.T|float %}
        {% if p < t %}
          SET_VELOCITY_LIMIT ACCEL={p} ACCEL_TO_DECEL={ p * f }
        {% else %}
          SET_VELOCITY_LIMIT ACCEL={t} ACCEL_TO_DECEL={ t * f }
        {% endif %}
      {% else %}
        SET_VELOCITY_LIMIT ACCEL={p} ACCEL_TO_DECEL={ p * f }
      {% endif %}
    {% elif 'T' in params %}
      {% set t = params.T|float %}
      SET_VELOCITY_LIMIT ACCEL={t} ACCEL_TO_DECEL={ t * f }
    {% endif %}
  {% endif %}

[gcode_macro M205]
gcode:
  {% if 'X' in params %}
    SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={params.X}
  {% elif 'Y' in params %}
    SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={params.Y}
  {% endif %}



[gcode_macro M701]
gcode:
  {% set default_u = 100 %}

  {% if 'save_variables' in printer %}
    {% set svv = printer.save_variables.variables %}
    {% if 'bowden_len' in svv %}
      {% set default_u = svv.bowden_len %}
    {% endif %}
  {% endif %}

  {% set i = params.I|default(30)|float %}
  {% set i_f = params.IF|default(180)|float %}
  {% set u = params.U|default(default_u)|float %}
  {% set u_f = params.UF|default(360)|float %}
  {% set p = params.P|default(30)|float %}
  {% set p_f = params.PF|default(180)|float %}

  {% if printer.idle_timeout.state == "Printing" and not printer.pause_resume.is_paused %}
    {action_respond_info("This command cannot be used while printing")}
  {% elif printer.extruder.temperature < 170 %}
    {action_respond_info("Extruder temperature too low")}
  {% else %}
    SAVE_GCODE_STATE NAME=M701_state
    M83
    {% if i > 0.0 %}
      G1 E{i} F{i_f}
    {% endif %}
    {% if u > 0.0 %}
      G1 E{u} F{u_f}
    {% endif %}
    {% if p > 0.0 %}
      G1 E{p} F{p_f}
    {% endif %}
    RESTORE_GCODE_STATE NAME=M701_state MOVE=0
  {% endif %}

[gcode_macro M702]
gcode:
  {% set default_u = 100 %}

  {% if 'save_variables' in printer %}
    {% set svv = printer.save_variables.variables %}
    {% if 'bowden_len' in svv %}
      {% set default_u = svv.bowden_len %}
    {% endif %}
  {% endif %}

  {% set p = params.P|default(8)|float %}
  {% set p_f = params.PF|default(180)|float %}
  {% set i = params.I|default(30)|float %}
  {% set i_f = params.IF|default(180)|float %}
  {% set u = params.U|default(default_u)|float %}
  {% set u_f = params.UF|default(360)|float %}

  {% if printer.idle_timeout.state == "Printing" and not printer.pause_resume.is_paused %}
    {action_respond_info("This command cannot be used while printing")}
  {% elif printer.extruder.temperature < 170 %}
    {action_respond_info("Extruder temperature too low")}
  {% else %}
    SAVE_GCODE_STATE NAME=M702_state
    M83
    {% if p > 0.0 %}
      G1 E{p} F{p_f}
    {% endif %}
    {% if i > 0.0 %}
      G1 E-{i} F{i_f}
    {% endif %}
    {% if u > 0.0 %}
      G1 E-{u} F{u_f}
    {% endif %}
    RESTORE_GCODE_STATE NAME=M702_state MOVE=0
  {% endif %}

[gcode_macro LOAD_FILAMENT]
gcode:
  {% set EXTRUDER = params.EXTRUDER|default(200)|int %}
  {% if printer.toolhead.status == "Ready" %}
    G90
    G0 X410 Y40                #move to area where can easily load filament
    M109 S{EXTRUDER}        #set hotend temperature and wait
    M83                        #relative positioning on extruder
    G0 E160 F400              #prime extruder
    G92 E0
    M82                   # Put the extruder back into absolute mode.
    UPDATE_DELAYED_GCODE ID=notify_extruder_load DURATION=10
  {% else %}
    { action_respond_info("Load Filament is disabled while printing!") }
  {% endif %}

[gcode_macro UNLOAD_FILAMENT]
gcode:
  {% set EXTRUDER = params.EXTRUDER|default(200)|int %}
  {% if printer.toolhead.status == "Ready" %}
    G0 X410 Y40                #move to area where can easily load filament
    M109 S{EXTRUDER}        #set hotend temperature and wait
    M83                        #relative positioning on extruder
    G0 E15 F400            #extrude filament to get better blob on end
    G0 E-130 F1000          #retract additional filament to move out of melt zone
    G92 E0
    M82                   # Put the extruder back into absolute mode.
    UPDATE_DELAYED_GCODE ID=notify_extruder_reload DURATION=10
  {% else %}
    { action_respond_info("Unload Filament is disabled while printing!") }
  {% endif %}

[gcode_macro BLTOUCH_RESET]
gcode:
  BLTOUCH_DEBUG COMMAND=reset

[gcode_macro BLTOUCH_PINDOWN]
gcode:
  BLTOUCH_DEBUG COMMAND=pin_down

[gcode_macro BLTOUCH_PINUP]
gcode:
  BLTOUCH_DEBUG COMMAND=pin_up

[gcode_macro BLTOUCH_SELFTEST]
gcode:
  BLTOUCH_DEBUG COMMAND=self_test

[gcode_macro BLTOUCH_TOUCHMODE]
gcode:
  BLTOUCH_DEBUG COMMAND=touch_mode